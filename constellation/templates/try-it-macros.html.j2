{% macro get_backlinks(subject, source, dids, limit) %}
  <form method="get" action="/xrpc/blue.microcosm.links.getBacklinks">
    <pre class="code"><strong>GET</strong> /xrpc/blue.microcosm.links.getBacklinks
  ?subject=    <input type="text" name="subject" value="{{ subject }}" placeholder="at-uri, did, uri..." />
  &source=     <input type="text" name="source" value="{{ source }}" placeholder="app.bsky.feed.like:subject.uri" />
  {%- for did in dids %}{% if !did.is_empty() %}
  &did=        <input type="text" name="did" value="{{ did }}" placeholder="did:plc:..." />{% endif %}{% endfor %}
  <span id="did-placeholder"></span>             <button id="add-did">+ did filter</button>
  &limit=      <input type="number" name="limit" value="{{ limit }}" max="100" placeholder="100" /> <button type="submit">get links</button></pre>
  </form>
  <script>
    const addDidButton = document.getElementById('add-did');
    const didPlaceholder = document.getElementById('did-placeholder');
    addDidButton.addEventListener('click', e => {
      e.preventDefault();
      const i = document.createElement('input');
      i.placeholder = 'did:plc:...';
      i.name = "did"
      const p = addDidButton.parentNode;
      p.insertBefore(document.createTextNode('&did=        '), didPlaceholder);
      p.insertBefore(i, didPlaceholder);
      p.insertBefore(document.createTextNode('\n  '), didPlaceholder);
    });
  </script>
{% endmacro %}

{% macro get_many_to_many_counts(subject, source, pathToOther, dids, otherSubjects, limit) %}
  <form method="get" action="/xrpc/blue.microcosm.links.getManyToManyCounts">
    <pre class="code"><strong>GET</strong> /xrpc/blue.microcosm.links.getManyToManyCounts
  ?subject=      <input type="text" name="subject" value="{{ subject }}" placeholder="at-uri, did, uri..." />
  &source=       <input type="text" name="source" value="{{ source }}" placeholder="app.bsky.feed.like:subject.uri" />
  &pathToOther=  <input type="text" name="pathToOther" value="{{ pathToOther }}" placeholder="otherThing.uri" />
  {%- for did in dids %}{% if !did.is_empty() %}
  &did=          <input type="text" name="did" value="{{ did }}" placeholder="did:plc:..." />{% endif %}{% endfor %}
  <span id="m2m-subject-placeholder"></span>               <button id="m2m-add-subject">+ other subject filter</button>
  {%- for otherSubject in otherSubjects %}{% if !otherSubject.is_empty() %}
  &otherSubject= <input type="text" name="did" value="{{ otherSubject }}" placeholder="at-uri, did, uri..." />{% endif %}{% endfor %}
  <span id="m2m-did-placeholder"></span>               <button id="m2m-add-did">+ did filter</button>
  &limit=        <input type="number" name="limit" value="{{ limit }}" max="100" placeholder="100" /> <button type="submit">get links</button></pre>
  </form>
  <script>
    const m2mAddDidButton = document.getElementById('m2m-add-did');
    const m2mDidPlaceholder = document.getElementById('m2m-did-placeholder');
    m2mAddDidButton.addEventListener('click', e => {
      e.preventDefault();
      const i = document.createElement('input');
      i.placeholder = 'did:plc:...';
      i.name = "did"
      const p = m2mAddDidButton.parentNode;
      p.insertBefore(document.createTextNode('&did=          '), m2mDidPlaceholder);
      p.insertBefore(i, m2mDidPlaceholder);
      p.insertBefore(document.createTextNode('\n  '), m2mDidPlaceholder);
    });
    const m2mAddSubjectButton = document.getElementById('m2m-add-subject');
    const m2mSubjectPlaceholder = document.getElementById('m2m-subject-placeholder');
    m2mAddSubjectButton.addEventListener('click', e => {
      e.preventDefault();
      const i = document.createElement('input');
      i.placeholder = 'at-uri, did, uri...';
      i.name = "otherSubject"
      const p = m2mAddSubjectButton.parentNode;
      p.insertBefore(document.createTextNode('&otherSubject= '), m2mSubjectPlaceholder);
      p.insertBefore(i, m2mSubjectPlaceholder);
      p.insertBefore(document.createTextNode('\n  '), m2mSubjectPlaceholder);
    });
  </script>
{% endmacro %}

{% macro links(target, collection, path, dids, limit) %}
  <form method="get" action="/links">
    <pre class="code"><strong>GET</strong> /links
  ?target=     <input type="text" name="target" value="{{ target }}" placeholder="target" />
  &collection= <input type="text" name="collection" value="{{ collection }}" placeholder="collection" />
  &path=       <input type="text" name="path" value="{{ path }}" placeholder="path" />
  {%- for did in dids %}{% if !did.is_empty() %}
  &did=        <input type="text" name="did" value="{{ did }}" placeholder="did:plc:..." />{% endif %}{% endfor %}
  <span id="did-placeholder"></span>             <button id="add-did">+ did filter</button>
  &limit=      <input type="number" name="limit" value="{{ limit }}" max="100" placeholder="100" /> <button type="submit">get links</button></pre>
  </form>
  <script>
    const addDidButton = document.getElementById('add-did');
    const didPlaceholder = document.getElementById('did-placeholder');
    addDidButton.addEventListener('click', e => {
      e.preventDefault();
      const i = document.createElement('input');
      i.placeholder = 'did:plc:...';
      i.name = "did"
      const p = addDidButton.parentNode;
      p.insertBefore(document.createTextNode('&did=        '), didPlaceholder);
      p.insertBefore(i, didPlaceholder);
      p.insertBefore(document.createTextNode('\n  '), didPlaceholder);
    });
  </script>
{% endmacro %}

{% macro dids(target, collection, path) %}
  <form method="get" action="/links/distinct-dids">
    <pre class="code"><strong>GET</strong> /links/distinct-dids
  ?target=     <input type="text" name="target" value="{{ target }}" placeholder="target" />
  &collection= <input type="text" name="collection" value="{{ collection }}" placeholder="collection" />
  &path=       <input type="text" name="path" value="{{ path }}" placeholder="path" /> <button type="submit">get links</button></pre>
  </form>
{% endmacro %}


{% macro links_count(target, collection, path) %}
  <form method="get" action="/links/count">
<pre class="code"><strong>GET</strong> /links/count
  ?target=     <input type="text" name="target" value="{{ target }}" placeholder="target" />
  &collection= <input type="text" name="collection" value="{{ collection }}" placeholder="collection" />
  &path=       <input type="text" name="path" value="{{ path }}" placeholder="path" /> <button type="submit">get links count</button></pre>
  </form>
{% endmacro %}


{% macro dids_count(target, collection, path) %}
  <form method="get" action="/links/count/distinct-dids">
<pre class="code"><strong>GET</strong> /links/count/distinct-dids
  ?target=     <input type="text" name="target" value="{{ target }}" placeholder="target" />
  &collection= <input type="text" name="collection" value="{{ collection }}" placeholder="collection" />
  &path=       <input type="text" name="path" value="{{ path }}" placeholder="path" /> <button type="submit">get links count</button></pre>
  </form>
{% endmacro %}


{% macro links_all_count(target) %}
  <form method="get" action="/links/all/count">
    <pre class="code"><strong>GET</strong> /links/all/count?target=<input type="text" name="target" value="{{ target }}" placeholder="target" /> <button type="submit">get all target link counts</button></pre>
  </form>
{% endmacro %}


{% macro explore_links(target) %}
  <form method="get" action="/links/all">
    <pre class="code"><strong>GET</strong> /links/all?target=<input type="text" name="target" value="{{ target }}" placeholder="target" /> <button type="submit">get all target link counts</button></pre>
  </form>
{% endmacro %}
